{"version":3,"sources":["components/Chat/styles.module.scss","components/Sidebar/styles.module.scss","firebase.js","store/slices/rooms/index.js","store/slices/auth/index.js","components/Sidebar/index.js","components/Chat/index.js","App.js","reportWebVitals.js","store/store.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","auth","provider","GoogleAuthProvider","fetchRooms","createAsyncThunk","_","a","dispatch","roomsArr","collection","onSnapshot","snapshot","docs","map","doc","id","data","setRooms","addRoom","value","add","name","getMessages","messagesArr","orderBy","setMessages","setCurrentRoom","setMessage","roomId","message","console","log","then","res","catch","err","roomsSlice","createSlice","initialState","rooms","messages","loading","errorMessage","reducers","state","action","payload","actions","signOut","signInWithPopup","setUser","user","authChecking","JSON","parse","localStorage","getItem","authSlice","setItem","stringify","Sidebar","useDispatch","useSelector","useState","setValue","className","styles","sidebar","adding","placeholder","onChange","e","target","onClick","room","roomActive","AlwaysScrollToBottom","elementRef","useRef","useEffect","current","scrollIntoView","ref","Chat","chat","messageContainer","myMessage","messageInner","text","time","Date","toDate","toUTCString","send","type","preventDefault","audio","image","FieldValue","serverTimestamp","sendMessage","App","Object","keys","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,KAAO,qBAAqB,iBAAmB,iCAAiC,KAAO,qBAAqB,UAAY,0BAA0B,QAAU,wBAAwB,aAAe,6BAA6B,KAAO,qBAAqB,KAAO,qBAAqB,KAAO,uB,mBCAjTD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,OAAS,uBAAuB,MAAQ,sBAAsB,KAAO,qBAAqB,WAAa,2BAA2B,QAAU,0B,+MCYhMC,IAASC,cAVc,CACrBC,OAAQ,0CACRC,WAAY,kCACZC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIjB,IAAMC,EAAKT,IAASU,YACdC,EAAOX,IAASW,OAChBC,EAAW,IAAIZ,IAASW,KAAKE,mBAGpBJ,ICNFK,EAAaC,YACtB,wBADsC,uCAEtC,WAAOC,EAAP,oBAAAC,EAAA,sDAAWC,EAAX,EAAWA,SACHC,EAAW,GAEfV,EAAGW,WAAW,SAASC,YAAW,SAAAC,GAC9BH,EAAWG,EAASC,KAAKC,KAAI,SAAAC,GAAG,MAAK,CACjCC,GAAID,EAAIC,GACRC,KAAMF,EAAIE,WAEdT,EAASU,EAAST,OAR1B,2CAFsC,yDAc7BU,EAAUd,YACnB,qBADmC,uCAEnC,WAAOe,EAAP,kBAAAb,EAAA,6DAAeC,EAAf,EAAeA,SAAf,SACUT,EAAGW,WAAW,SAASW,IAAI,CAACC,KAAMF,IAD5C,OAEIZ,EAASJ,KAFb,2CAFmC,yDAO1BmB,EAAclB,YACvB,yBADuC,uCAEvC,WAAOW,EAAP,oBAAAT,EAAA,sDAAYC,EAAZ,EAAYA,SACJgB,EAAc,GAClBzB,EAAGW,WAAW,SAASK,IAAIC,GAAIN,WAAW,YAAYe,QAAQ,OAAQ,OAAOd,YAAW,SAAAC,GACpFY,EAAcZ,EAASC,KAAKC,KAAI,SAAAC,GAAG,MAAK,CACpCC,GAAID,EAAIC,GACRC,KAAMF,EAAIE,WAEdT,EAASkB,EAAYF,OAEzBhB,EAASmB,EAAeX,IAT5B,2CAFuC,yDAc9BY,EAAavB,YACtB,yBACA,YAAwB,IAAtBwB,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,QACNC,QAAQC,IAAI,CAACH,SAAQC,YACrB/B,EAAGW,WAAW,SAASK,IAAIc,GAAQnB,WAAW,YAAYW,IAAIS,GACzDG,MAAK,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,MACxBC,OAAM,SAAAC,GAAG,OAAIL,QAAQC,IAAII,SAKhCC,EAAaC,YAAY,CAC3BhB,KAAM,aACNiB,aAzDiB,CACjBC,MAAO,GACPC,SAAU,GACVC,SAAS,EACTb,OAAQ,GACRc,aAAc,IAsDdC,SAAU,CACN1B,SADM,SACG2B,EAAOC,GACZD,EAAML,MAAQM,EAAOC,SAEzBrB,YAJM,SAIMmB,EAAOC,GACfD,EAAMJ,SAAWK,EAAOC,SAE5BpB,eAPM,SAOSkB,EAAOC,GAClBD,EAAMhB,OAASiB,EAAOC,YAKnBV,IAAf,Q,EACuDA,EAAWW,QAApD9B,E,EAAAA,SAAUQ,E,EAAAA,YAAaC,E,EAAAA,eC3DxBsB,GAPS5C,YAClB,mBADkC,uCAElC,WAAOC,EAAP,oBAAAC,EAAA,6DAAWC,EAAX,EAAWA,SAAX,SACuBP,EAAKiD,gBAAgBhD,GAD5C,OACUe,EADV,OAEIT,EAAS2C,EAAQlC,EAAKmC,OAF1B,2CAFkC,yDAOf/C,YACnB,mBADmC,uCAEnC,WAAOC,EAAP,kBAAAC,EAAA,6DAAWC,EAAX,EAAWA,SAAX,SACUP,EAAKgD,UADf,OAEIzC,EAAS2C,EAAQ,KAFrB,2CAFmC,0DAO1BE,EAAehD,YACxB,0BACC,SAACC,EAAD,GAAoB,IAAfE,EAAc,EAAdA,SACE4C,EAAOE,KAAKC,MAAMC,aAAaC,QAAQ,SAAW,MACtDjD,EAAS2C,EAAQC,OASnBM,EAAYpB,YAAY,CAC1BhB,KAAM,OACNiB,aApCiB,CACjBa,KAAM,GACNV,SAAS,EACTC,aAAc,IAmCdC,SAAU,CACNO,QADM,SACEN,EAAOC,GACXU,aAAaG,QAAQ,OAAQL,KAAKM,UAAUd,EAAOC,UACnDF,EAAMO,KAAON,EAAOC,YAKjBW,IAAf,QACcP,EAAWO,EAAUV,QAArBG,Q,QCrBCU,EAvBC,WACZ,IAAMrD,EAAWsD,cADC,EAEMC,aAAY,SAAAlB,GAAK,OAAIA,EAAML,SAA5CA,EAFW,EAEXA,MAAOX,EAFI,EAEJA,OAFI,EAGQmC,mBAAS,IAHjB,mBAGX5C,EAHW,KAGJ6C,EAHI,KAKlB,OACI,sBAAKC,UAAWC,IAAOC,QAAvB,UACI,gCACI,sBAAKF,UAAWC,IAAOE,OAAvB,UACI,uBAAOjD,MAAOA,EAAOkD,YAAY,8FAAmBC,SAAU,SAACC,GAAD,OAAOP,EAASO,EAAEC,OAAOrD,UACvF,wBAAQsD,QAAS,kBAAMlE,EAASW,EAAQC,KAAxC,iEAEJ,qBAAK8C,UAAWC,IAAO3B,MAAvB,SAEQA,EAAM1B,KAAI,SAAA6D,GAAI,aAAI,qBAAKT,UAAWrC,IAAW8C,EAAK3D,GAAKmD,IAAOS,WAAaT,IAAOQ,KAAMD,QAAS,kBAAMlE,EAASe,EAAYoD,EAAK3D,MAA/G,mBAAoI2D,EAAK1D,YAAzI,aAAoI,EAAWK,MAArBqD,EAAK3D,YAI7J,wBAAQkD,UAAWC,IAAOlB,QAASyB,QAAS,kBAAMlE,EAASyC,MAA3D,gD,iBCnBN4B,EAAuB,WACzB,IAAMC,EAAaC,mBAEnB,OADAC,qBAAU,kBAAMF,EAAWG,QAAQC,oBAC5B,qBAAKC,IAAKL,KAiDNM,EA9CF,WACT,IAAM5E,EAAWsD,cADF,EAEYC,aAAY,SAAAlB,GAAK,OAAIA,EAAML,SAA/CC,EAFQ,EAERA,SAAUZ,EAFF,EAEEA,OACXuB,EAAOW,aAAY,SAAAlB,GAAK,OAAIA,EAAM5C,KAAKmD,QAH9B,EAIWY,mBAAS,IAJpB,mBAIR5C,EAJQ,KAID6C,EAJC,KAKflC,QAAQC,IAAIoB,GAcZ,OACI,sBAAKc,UAAWC,IAAOkB,KAAvB,UACI,sBAAKnB,UAAWC,IAAOmB,iBAAvB,UACK7C,EAAS3B,KAAI,SAAAgB,GAAY,IAAD,IACrB,OACI,qBAAKoC,UAAWpC,EAAQb,KAAKK,OAAS8B,EAAK9B,KAAO6C,IAAOoB,UAAYpB,IAAOrC,QAA5E,SAEI,sBAAKoC,UAAWC,IAAOqB,aAAvB,UACI,qBAAKtB,UAAWC,IAAO7C,KAAvB,SAA8BQ,EAAQb,KAAKK,OAC3C,mBAAG4C,UAAWC,IAAOsB,KAArB,SAA4B3D,EAAQb,KAAKa,UACzC,sBACIoC,UAAWC,IAAOuB,KADtB,SAC6B,IAAIC,KAAJ,UAAS7D,EAAQb,YAAjB,iBAAS,EAAcyE,YAAvB,aAAS,EAAoBE,UAAUC,oBALlE/D,EAAQd,OAU1B,cAAC,EAAD,OAEHa,GACD,sBAAKqC,UAAWC,IAAO2B,KAAvB,UACI,uBAAOC,KAAK,OAAO3E,MAAOA,EAAOkD,YAAY,yDAAYC,SAAU,SAACC,GAAD,OAAOP,EAASO,EAAEC,OAAOrD,UAC5F,wBAAQsD,QAAS,SAACF,GAAD,OAjCT,SAACA,GACjBA,EAAEwB,iBACF,IAAIlE,EAAU,CACVR,KAAM8B,EAAK9B,KACX2E,MAAO,GACPC,MAAO,GACPpE,QAASV,EACTsE,KAAMpG,IAASU,UAAUmG,WAAWC,mBAExC5F,EAASoB,EAAW,CAACC,SAAQC,aAwBGuE,CAAY7B,IAApC,2ECPD8B,MApCf,WACI,IAAM9F,EAAWsD,cADN,EAEeE,qBAFf,mBAEJ5C,EAFI,KAEG6C,EAFH,KAGLb,EAAOW,aAAY,SAAAlB,GAAK,OAAIA,EAAM5C,KAAKmD,QAgB7C,OAdA4B,qBAAU,WACNxE,EAASJ,KACTI,EAAS6C,OACV,CAAC7C,IAYA,qBAAK0D,UAAU,MAAf,SAESqC,OAAOC,KAAKpD,GAAMqD,OAKf,qCACI,cAAC,EAAD,IACA,cAAC,EAAD,OANJ,sBAAKvC,UAAU,OAAf,UACI,uBAAO6B,KAAK,OAAO3E,MAAOA,EAAOkD,YAAY,8CAAWC,SAAU,SAACC,GAAD,OAAOP,EAASO,EAAEC,OAAOrD,UAC3F,wBAAQsD,QAAS,WAd9BtD,GAICZ,EAAS2C,EAHE,CACP7B,KAAMF,MAYE,0ECtBTsF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3E,MAAK,YAAkD,IAA/C4E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFDO,EAAQC,YAAe,CAChCC,QAAS,CACLnH,OACAuC,SAEJ6E,WAAY,SAACC,GAAD,OACRA,EAAqB,CACjBC,mBAAmB,O,QCH/BC,IAASC,OACL,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACI,cAAC,IAAD,UACI,cAAC,IAAMQ,WAAP,UACI,cAAC,EAAD,UAIZC,SAASC,eAAe,SAM5BlB,M","file":"static/js/main.1fbf07ad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat\":\"styles_chat__23nrG\",\"messageContainer\":\"styles_messageContainer__3KnPr\",\"send\":\"styles_send__3WBd0\",\"myMessage\":\"styles_myMessage__3QpBI\",\"message\":\"styles_message__3C9ZM\",\"messageInner\":\"styles_messageInner__hTHv1\",\"name\":\"styles_name__4yeO6\",\"text\":\"styles_text__2LEyL\",\"time\":\"styles_time__rLBsW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"styles_sidebar__16trl\",\"adding\":\"styles_adding__3hh25\",\"rooms\":\"styles_rooms__3tvlm\",\"room\":\"styles_room__3mWb0\",\"roomActive\":\"styles_roomActive__2D0bO\",\"signOut\":\"styles_signOut__RlJtr\"};","import firebase from \"firebase/compat\";\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAghmcGT8Vx9NJYaJJrQZv9KGGQJoSrj3M\",\r\n  authDomain: \"messanger-d22bd.firebaseapp.com\",\r\n  projectId: \"messanger-d22bd\",\r\n  storageBucket: \"messanger-d22bd.appspot.com\",\r\n  messagingSenderId: \"924028479563\",\r\n  appId: \"1:924028479563:web:d969696cf156cdb9e305ce\",\r\n  measurementId: \"G-LL04W52QS6\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nconst db = firebase.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {auth, provider};\r\nexport default db;","import {createAsyncThunk, createSlice} from \"@reduxjs/toolkit\";\r\nimport db from \"../../../firebase\";\r\n\r\n\r\nconst initialState = {\r\n    rooms: [],\r\n    messages: [],\r\n    loading: false,\r\n    roomId: '',\r\n    errorMessage: '',\r\n}\r\n\r\n//async actions\r\nexport const fetchRooms = createAsyncThunk(\r\n    'fetchRooms/roomsSlice',\r\n    async (_, {dispatch}) => {\r\n        let roomsArr = [];\r\n\r\n        db.collection('rooms').onSnapshot(snapshot => {\r\n            roomsArr = snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                data: doc.data()\r\n            }));\r\n            dispatch(setRooms(roomsArr));\r\n        })\r\n    }\r\n)\r\nexport const addRoom = createAsyncThunk(\r\n    'addRoom/roomsSlice',\r\n    async (value, {dispatch}) => {\r\n        await db.collection('rooms').add({name: value});\r\n        dispatch(fetchRooms());\r\n    }\r\n)\r\nexport const getMessages = createAsyncThunk(\r\n    'getMessages/roomsSlice',\r\n    async (id, {dispatch}) => {\r\n        let messagesArr = [];\r\n        db.collection('rooms').doc(id).collection('messages').orderBy('time', 'asc').onSnapshot(snapshot => {\r\n            messagesArr = snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                data: doc.data()\r\n            }));\r\n            dispatch(setMessages(messagesArr));\r\n        });\r\n        dispatch(setCurrentRoom(id))\r\n    }\r\n)\r\nexport const setMessage = createAsyncThunk(\r\n    'setMessage/roomsSlice',\r\n    ({roomId, message}) => {\r\n        console.log({roomId, message})\r\n        db.collection('rooms').doc(roomId).collection('messages').add(message)\r\n            .then(res => console.log(res))\r\n            .catch(err => console.log(err))\r\n    }\r\n)\r\n\r\n\r\nconst roomsSlice = createSlice({\r\n    name: 'roomsSlice',\r\n    initialState,\r\n\r\n    reducers: {\r\n        setRooms(state, action) {\r\n            state.rooms = action.payload;\r\n        },\r\n        setMessages(state, action) {\r\n            state.messages = action.payload;\r\n        },\r\n        setCurrentRoom(state, action) {\r\n            state.roomId = action.payload;\r\n        }\r\n    },\r\n})\r\n\r\nexport default roomsSlice.reducer;\r\nexport const {setRooms, setMessages, setCurrentRoom} = roomsSlice.actions;","import {createAsyncThunk, createSlice} from \"@reduxjs/toolkit\";\r\nimport {auth, provider} from \"../../../firebase\";\r\n\r\n\r\nconst initialState = {\r\n    user: {},\r\n    loading: false,\r\n    errorMessage: '',\r\n}\r\n\r\n//async actions\r\nexport const signIn = createAsyncThunk(\r\n    'authSlice/signIn',\r\n    async (_, {dispatch}) => {\r\n        const data = await auth.signInWithPopup(provider);\r\n        dispatch(setUser(data.user));\r\n    }\r\n)\r\nexport const signOut = createAsyncThunk(\r\n    'authSlice/signIn',\r\n    async (_, {dispatch}) => {\r\n        await auth.signOut();\r\n        dispatch(setUser({}));\r\n    }\r\n)\r\nexport const authChecking = createAsyncThunk(\r\n    'authSlice/authChecking',\r\n     (_, {dispatch}) => {\r\n        let user = JSON.parse(localStorage.getItem('user') || \"{}\");\r\n        dispatch(setUser(user));\r\n         // auth.onAuthStateChanged((user) => {\r\n         //     if (user) {\r\n         //         dispatch(setUser(auth.currentUser));\r\n         //     }\r\n         // })\r\n    }\r\n)\r\n\r\nconst authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n\r\n    reducers: {\r\n        setUser(state, action) {\r\n            localStorage.setItem('user', JSON.stringify(action.payload));\r\n            state.user = action.payload;\r\n        }\r\n    }\r\n})\r\n\r\nexport default authSlice.reducer;\r\nexport const {setUser} = authSlice.actions;","import React, {useState} from 'react';\r\nimport styles from './styles.module.scss';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {addRoom, getMessages} from \"../../store/slices/rooms\";\r\nimport {signOut} from \"../../store/slices/auth\";\r\n\r\n\r\nconst Sidebar = () => {\r\n    const dispatch = useDispatch();\r\n    const {rooms, roomId} = useSelector(state => state.rooms);\r\n    const [value, setValue] = useState('');\r\n\r\n    return (\r\n        <div className={styles.sidebar}>\r\n            <div>\r\n                <div className={styles.adding}>\r\n                    <input value={value} placeholder='Добавить комнату' onChange={(e) => setValue(e.target.value)}/>\r\n                    <button onClick={() => dispatch(addRoom(value))}>Добавить</button>\r\n                </div>\r\n                <div className={styles.rooms}>\r\n                    {\r\n                        rooms.map(room => <div className={roomId === room.id ? styles.roomActive : styles.room} onClick={() => dispatch(getMessages(room.id))} key={room.id}>{room.data?.name}</div>)\r\n                    }\r\n                </div>\r\n            </div>\r\n            <button className={styles.signOut} onClick={() => dispatch(signOut())}>Выйти</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, {useRef, useState, useEffect} from 'react';\r\nimport styles from './styles.module.scss';\r\nimport {setMessage} from \"../../store/slices/rooms\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport firebase from \"firebase/compat\";\r\n\r\nconst AlwaysScrollToBottom = () => {\r\n    const elementRef = useRef();\r\n    useEffect(() => elementRef.current.scrollIntoView());\r\n    return <div ref={elementRef}/>;\r\n};\r\n\r\nconst Chat = () => {\r\n    const dispatch = useDispatch();\r\n    const {messages, roomId} = useSelector(state => state.rooms);\r\n    const user = useSelector(state => state.auth.user);\r\n    const [value, setValue] = useState(\"\");\r\n    console.log(user)\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        let message = {\r\n            name: user.name,\r\n            audio: '',\r\n            image: '',\r\n            message: value,\r\n            time: firebase.firestore.FieldValue.serverTimestamp(),\r\n        }\r\n        dispatch(setMessage({roomId, message}))\r\n    }\r\n\r\n    return (\r\n        <div className={styles.chat}>\r\n            <div className={styles.messageContainer}>\r\n                {messages.map(message => {\r\n                    return (\r\n                        <div className={message.data.name === user.name ? styles.myMessage : styles.message}\r\n                             key={message.id}>\r\n                            <div className={styles.messageInner}>\r\n                                <div className={styles.name}>{message.data.name}</div>\r\n                                <p className={styles.text}>{message.data.message}</p>\r\n                                <span\r\n                                    className={styles.time}>{new Date(message.data?.time?.toDate()).toUTCString()}</span>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n                <AlwaysScrollToBottom/>\r\n            </div>\r\n            {roomId &&\r\n            <div className={styles.send}>\r\n                <input type='text' value={value} placeholder='Сообщение' onChange={(e) => setValue(e.target.value)}/>\r\n                <button onClick={(e) => sendMessage(e)}>Отправить</button>\r\n            </div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n","import './App.css';\nimport Sidebar from \"./components/Sidebar\";\nimport {useEffect, useState} from \"react\";\nimport {fetchRooms} from \"./store/slices/rooms\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {authChecking, setUser, signIn} from \"./store/slices/auth\";\nimport Chat from \"./components/Chat\";\n\n\nfunction App() {\n    const dispatch = useDispatch();\n    const [value, setValue] = useState();\n    const user = useSelector(state => state.auth.user);\n\n    useEffect(() => {\n        dispatch(fetchRooms());\n        dispatch(authChecking());\n    }, [dispatch])\n\n    const nameInputHandler = () => {\n        if(value) {\n            let user = {\n                name: value\n            }\n            dispatch(setUser(user))\n        }\n    }\n\n    return (\n        <div className=\"App\">\n            {\n                !Object.keys(user).length ?\n                    <div className='auth'>\n                        <input type='text' value={value} placeholder='Имя пиши' onChange={(e) => setValue(e.target.value)}/>\n                        <button onClick={() =>  nameInputHandler()}>Зарегайся</button>\n                    </div> :\n                    <>\n                        <Sidebar/>\n                        <Chat/>\n                    </>\n            }\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {configureStore} from \"@reduxjs/toolkit\";\r\nimport auth from './slices/auth';\r\nimport rooms from './slices/rooms';\r\n\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        auth,\r\n        rooms,\r\n    },\r\n    middleware: (getDefaultMiddleware) =>\r\n        getDefaultMiddleware({\r\n            serializableCheck: false,\r\n        }),\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store/store\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <React.StrictMode>\n                <App/>\n            </React.StrictMode>\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}